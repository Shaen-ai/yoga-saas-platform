FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY apps/yoga-dashboard/package*.json ./

# Install dependencies
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# Copy source code and build
COPY apps/yoga-dashboard ./
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built app
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx configuration if it exists, otherwise use default
COPY infrastructure/nginx/nginx.conf /etc/nginx/nginx.conf 2>/dev/null || echo "Using default nginx config"

# Create nginx user and set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

CMD ["nginx", "-g", "daemon off;"]